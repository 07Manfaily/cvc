import React, { useState } from 'react';
import * as FileSaver from "file-saver";
import * as XLSX from "xlsx";
import axios from 'axios';
import { Button } from "@mui/material";
import FileDownloadIcon from '@mui/icons-material/FileDownload';

export const ExportToExcel = ({ apiData, fileName }) => {
  const [dataDownload, setDataDownload] = useState(null);

  const fileType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8";
  const fileExtension = ".xlsx";

  const downloadFile = async (emitter, receiver) => {
    try {
      const response = await axios.post(
        "/api/graph/download",
        {
          "emitter": emitter,
          "receiver": receiver
        },
        {
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-TOKEN': getCookie("csrf_refresh_token")
          }
        }
      );

      if (response.status === 200) {
        setDataDownload(response.data);
        exportToCSV(response.data, fileName);
      }

      console.log("download:", response.data);
    } catch (error) {
      console.log("Erreur lors du traitement:", error);
    }
  };

  const exportToCSV = (apiData, fileName) => {
    const ws = XLSX.utils.json_to_sheet(apiData);
    const wb = { Sheets: { data: ws }, SheetNames: ["data"] };
    const excelBuffer = XLSX.write(wb, { bookType: "xlsx", type: "array" });
    const data = new Blob([excelBuffer], { type: fileType });
    FileSaver.saveAs(data, fileName + fileExtension);
  };

  const handleExportClick = () => {
    // Vérifiez si vous avez des valeurs d'émetteur et de destinataire avant de télécharger
    if (dataDownload && fileName) {
      exportToCSV(dataDownload, fileName);
    } else {
      // Si les données ou le nom de fichier sont manquants, demandez-les à l'utilisateur ou affichez un message d'erreur
      console.log("Données ou nom de fichier manquants.");
    }
  };

  return (
    <Button onClick={handleExportClick} style={{ backgroundColor: "#274e13" }}>
      <FileDownloadIcon style={{ color: "white" }} />
    </Button>
  );
};
