data
: 
A
: 
{name: "Chiffres d'affaires", value: Array(196)}
B
: 
{name: 'NÂ° client SGCI', value: Array(196)}
C
: 
{name: 'Montant des engagements', value: Array(196)}
D
: 
{name: 'Cluster ID', value: Array(196)}


const getClient = async() => {
    await axios.get('http://localhost:3000/get')
    .then((response) => {
      console.log("reponse of clients: ", response);
      
      if (response.status === 200) {
        const data = response.data;
        setClient(data);
      
           } 

      })
      .catch((error) => {
        console.log('Error lors du traitement:', error);
        setError('Oups !!!! erreur liÃ©e au serveur');
        console.log(error.response?.data || "Oups!!!! une erreur s'est produite");
      });
  }

  
  const navigate = useNavigate();
  const columns = [
    
    {
      name: 'Action',
      button: true,
      cell: row => (
        <Button   style={{ color: 'black'}}  onClick={() =>  navigate(`/dashboard/chaine-de-valeur`, { replace: true })}>
        <VisibilityIcon style={{ color: '#495F52',  fontSize: 30 }}/>
        </Button>
      ),
    },
  ];

const data = [
   
   
   
    
  ];


 <DataTable
        
            columns={columns}
            data={filteredItems}
            pagination
            paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1
            subHeader
            subHeaderComponent={subHeaderComponentMemo}
            persistTableHead
          />
