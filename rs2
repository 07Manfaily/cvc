 npm install
npm notice
npm notice New minor version of npm available! 10.7.0 -> 10.8.1
npm notice Changelog: https://github.com/npm/cli/releases/tag/v10.8.1
npm notice To update run: npm install -g npm@10.8.1
npm notice
npm error code ERESOLVE
npm error ERESOLVE unable to resolve dependency tree
npm error
npm error While resolving: credapp@0.1.0
npm error Found: styled-components@5.3.11
npm error node_modules/styled-components
npm error   styled-components@"^5.3.3" from the root project
npm error
npm error Could not resolve dependency:
npm error peer styled-components@"^6.0.0" from @mui/styled-engine-sc@6.0.0-alpha.18
npm error node_modules/@mui/styled-engine-sc
npm error   @mui/styled-engine-sc@"^6.0.0-alpha.18" from the root project
npm error
npm error Fix the upstream dependency conflict, or retry
npm error this command with --force or --legacy-peer-deps
npm error to accept an incorrect (and potentially broken) dependency resolution.
npm error
npm error
npm error For a full report see:
npm error C:\Users\Roland.YAO-H\AppData\Local\npm-cache\_logs\2024-07-01T11_59_47_649Z-eresolve-report.txt

npm error A complete log of this run can be found in: C:\Users\Roland.YAO-H\AppData\Local\npm-cache\_logs\2024-07-01T11_59_47_649Z-debug-0.log
PS D:\ROLAND_YAO\credapp> pm install -g npm@10.8.1
pm : The term 'pm' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included, verify that the 
path is correct and try again.
At line:1 char:1
+ pm install -g npm@10.8.1
+ ~~
    + CategoryInfo          : ObjectNotFound: (pm:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
 
PS D:\ROLAND_YAO\credapp> npm install -g npm@10.8.1

added 1 package in 12s

24 packages are looking for funding
  run `npm fund` for details
PS D:\ROLAND_YAO\credapp> npm install
npm error code ERESOLVE
npm error ERESOLVE unable to resolve dependency tree
npm error
npm error While resolving: credapp@0.1.0
npm error Found: styled-components@5.3.11
npm error node_modules/styled-components
npm error   styled-components@"^5.3.3" from the root project
npm error
npm error Could not resolve dependency:
npm error peer styled-components@"^6.0.0" from @mui/styled-engine-sc@6.0.0-alpha.18
npm error node_modules/@mui/styled-engine-sc
npm error   @mui/styled-engine-sc@"^6.0.0-alpha.18" from the root project
npm error
npm error Fix the upstream dependency conflict, or retry
npm error this command with --force or --legacy-peer-deps
npm error to accept an incorrect (and potentially broken) dependency resolution.
npm error
npm error
npm error For a full report see:
npm error C:\Users\Roland.YAO-H\AppData\Local\npm-cache\_logs\2024-07-01T12_01_35_556Z-eresolve-report.txt
npm error A complete log of this run can be found in: C:\Users\Roland.YAO-H\AppData\Local\npm-cache\_logs\2024-07-01T12_01_35_556Z-debug-0.log
PS D:\ROLAND_YAO\credapp> npm install
npm error code ERESOLVE
npm error ERESOLVE unable to resolve dependency tree
npm error
npm error While resolving: credapp@0.1.0
npm error Found: styled-components@5.3.11
npm error node_modules/styled-components
npm error   styled-components@"^5.3.3" from the root project
npm error
npm error Could not resolve dependency:
npm error peer styled-components@"^6.0.0" from @mui/styled-engine-sc@6.0.0-alpha.18
npm error node_modules/@mui/styled-engine-sc
npm error   @mui/styled-engine-sc@"^6.0.0-alpha.18" from the root project
npm error
npm error Fix the upstream dependency conflict, or retry
npm error this command with --force or --legacy-peer-deps
npm error to accept an incorrect (and potentially broken) dependency resolution.
npm error
npm error
npm error For a full report see:
npm error C:\Users\Roland.YAO-H\AppData\Local\npm-cache\_logs\2024-07-01T12_01_49_503Z-eresolve-report.txt
npm error A complete log of this run can be found in: C:\Users\Roland.YAO-H\AppData\Local\npm-cache\_logs\2024-07-01T12_01_49_503Z-debug-0.log
PS D:\ROLAND_YAO\credapp>


import React, { useState, useEffect } from 'react';
import 'animate.css';

const Questionnaire = () => {
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [answers, setAnswers] = useState(Array(10).fill({ radio: '', comment: '' }));
  const [animationClass, setAnimationClass] = useState('');

  useEffect(() => {
    setAnimationClass('animate__animated animate__backInUp');
    const timer = setTimeout(() => {
      setAnimationClass('');
    }, 1000); // La durée de l'animation doit correspondre à celle définie dans animate.css (par défaut 1s)

    return () => clearTimeout(timer);
  }, [currentQuestion]);

  const handleNext = () => {
    setCurrentQuestion((prev) => Math.min(prev + 1, 9));
  };

  const handleBack = () => {
    setCurrentQuestion((prev) => Math.max(prev - 1, 0));
  };

  const handleAnswerChange = (index, field, value) => {
    const newAnswers = [...answers];
    newAnswers[index] = { ...newAnswers[index], [field]: value };
    setAnswers(newAnswers);
  };

  const handleQuestionClick = (index) => {
    if (answers[index].radio && answers[index].comment) {
      setCurrentQuestion(index);
    }
  };

  const isQuestionValid = (index) => {
    return answers[index].radio && answers[index].comment;
  };

  return (
    <div>
      {answers.map((answer, index) => (
        <div
          key={index}
          className={`question ${index === currentQuestion ? animationClass : ''}`}
          style={{ display: index === currentQuestion ? 'block' : 'none' }}
        >
          <h2>Question {index + 1}</h2>
          <div>
            <label>
              <input
                type="radio"
                name={`question-${index}`}
                value="yes"
                checked={answer.radio === 'yes'}
                onChange={() => handleAnswerChange(index, 'radio', 'yes')}
              />
              Yes
            </label>
            <label>
              <input
                type="radio"
                name={`question-${index}`}
                value="no"
                checked={answer.radio === 'no'}
                onChange={() => handleAnswerChange(index, 'radio', 'no')}
              />
              No
            </label>
          </div>
          <textarea
            value={answer.comment}
            onChange={(e) => handleAnswerChange(index, 'comment', e.target.value)}
            placeholder="Add a comment"
          />
          <div>
            <button onClick={handleBack} disabled={index === 0}>
              Back
            </button>
            <button onClick={handleNext} disabled={index === 9}>
              Next
            </button>
          </div>
        </div>
      ))}
      <div className="question-navigation">
        {answers.map((_, index) => (
          <button
            key={index}
            onClick={() => handleQuestionClick(index)}
            disabled={!isQuestionValid(index)}
          >
            {index + 1}
          </button>
        ))}
      </div>
    </div>
  );
};

export default Questionnaire;
