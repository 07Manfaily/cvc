 const elegibilityValue = [
    ...document.querySelectorAll(
      "#eligibility-criteria-container .MuiPaper-root",
    ),
  ].map((critera) => {
      return {
        label: critera.querySelector("textarea").getAttribute("name").replace("-comment", ''),
        comment: critera.querySelector("textarea").value,
        value: critera.querySelector("input[type=radio]:checked")
          ? critera.querySelector("input[type=radio]:checked").value
          : null,
      };
    })


 const handleSendControlEligibite = async () => {
    setLoading(true);
    await axios
      .post(
        "/api/panel/eligibility/set",
        { "number_client":  matricule,
        "data":  elegibilityValue},
        {
          headers: {
            "Content-Type": "application/json",
            "X-CSRF-TOKEN": getCookie("csrf_refresh_token"),
          },
        },
      )
      .then((response) => {
        console.log("reponse de send control eligibilité: ", response);
        const val = elegibilityValue.reduce((sum, iter) => iter.value === 1 && sum, true);
        console.log("val :", val);
        if (val) {
          setShowAlert(false);
        }else{
          setShowAlert(true)
        }
     
      })
      .catch((error) => {
        console.log("Error lors du traitement de control eligibilité:", error);
        setError(error.response?.data || "Oups!!!! une erreur s'est produite");
      })
      .finally(() => {
        setLoading(false);
      });
  };

const handleComplete = async () => {
    const RADIO = elegibilityValue.reduce((sum, iter) => iter.value === 1 && sum, true);
    console.log("valeur radio", RADIO);
  const newCompleted = new Set(completed);
    newCompleted.add(activeStep);
    setCompleted(newCompleted);
    if (completed.size !== totalSteps() - skippedSteps()) {
      handleNext();
    }
    if (activeStep === 0){
      await handleSendControlEligibite()
    }
    if (activeStep === 3) {
      await handleSendEngagement();
    }

    if (activeStep === 2) {
      await handleSendInside();
    }

    if (
      (activeStep === 0 ||
        activeStep === 1 ||
        activeStep === 2 ||
        activeStep === 3) &&
      RADIO
    ) {
      setShowAlert(false);
    } else {
      setShowAlert(true);
    }
  };
